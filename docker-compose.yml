version: '3.5'

services:
  database:
    container_name: bookstore-postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: bookstore
      POSTGRES_PASSWORD: bookstore
      POSTGRES_MULTIPLE_DATABASES: "bookslease,bookstore: userservice,bookstore"
      PGDATA: /data/postgres
    healthcheck:
      test: "pg_isready -U bookstore"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 2s
    volumes:
      - ./postgres-data:/data/postgres
      - ./.postgres-init:/docker-entrypoint-initdb.d
  eureka:
    container_name: bookstore-eureka
    image: bookstore-eureka
    build:
      context: DiscoveryService/
      dockerfile: ../Dockerfile
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 5s
  config:
    container_name: bookstore-config
    image: bookstore-config
    build:
      context: ConfigurationService/
      dockerfile: ../Dockerfile
    ports:
        - "8888:8888"
    restart: on-failure
    depends_on:
      eureka:
        condition: service_healthy
    volumes:
      - ./configuration:/opt/config
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 5s
  users:
    container_name: bookstore-user-service
    image: bookstore-user-service
    build:
      context: UserService/
      dockerfile: ../Dockerfile
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      database:
        condition: service_healthy
      eureka:
        condition: service_healthy
      config:
        condition: service_healthy
    environment:
      SERVER_PORT: 8081
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 5s
  bookstore:
    container_name: bookstore-bookstore-service
    image: bookstore-bookstore-service
    build:
      context: BookStoreService/
      dockerfile: ../Dockerfile
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      database:
        condition: service_healthy
      eureka:
        condition: service_healthy
      users:
        condition: service_healthy
      config:
        condition: service_healthy
      library:
        condition: service_healthy
    environment:
      SERVER_PORT: 8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 5s
  gateway:
    container_name: bookstore-gateway-service
    image: bookstore-gateway-service
    build:
      context: GatewayService/
      dockerfile: ../Dockerfile
    ports:
      - "8083:8083"
    restart: on-failure
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_healthy
    environment:
      SERVER_PORT: 8083
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 5s
  library:
    container_name: bookstore-library-service
    image: bookstore-library-service
    build:
      context: LibraryService/
      dockerfile: ../Dockerfile
    ports:
      - "8082:8082"
    restart: on-failure
    depends_on:
      database:
        condition: service_healthy
      eureka:
        condition: service_healthy
      config:
        condition: service_healthy
    environment:
      SERVER_PORT: 8082
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 5s
